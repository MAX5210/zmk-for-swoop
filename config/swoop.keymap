/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ESC>,
                <&kp TAB>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <3 2>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };

        shift_minus {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 17>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <25 27>;
        };

        greater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <25 28>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 10 11>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <15 18>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <5 6>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <3 4>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <6 7 8>;
        };

        semi {
            bindings = <&kp SEMICOLON>;
            key-positions = <16 17 18>;
        };

        qort {
            bindings = <&kp SQT>;
            key-positions = <17 18>;
        };

        d_qourt {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <26 17 18>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&ht ESC Q    &kp W  &kp E             &kp R      &kp T    &kp Y  &kp U            &kp I              &kp O        &kp P
&kp A        &kp S  &kp D             &kp F      &kp G    &kp H  &ht RIGHT_ALT J  &ht RIGHT_GUI K    &ht RCTRL L  &kp BSPC
&ht LSHFT Z  &kp X  &ht LEFT_ALT C    &kp V      &kp B    &kp N  &kp M            &kp COMMA          &kp SLASH    &ht RSHFT ENTER
                    &kp LEFT_CONTROL  &kp SPACE  &mo 1    &mo 1  &mo 2            &kp RIGHT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        number {
            label = "NUMBER";
            bindings = <
&kp N1     &kp N2  &kp N3         &kp N4     &kp N5     &kp N6         &kp N7            &kp N8     &kp N9             &kp N0
&kp A      &kp S   &kp LC(SPACE)  &kp F      &kp G      &kp SEMICOLON  &kp MINUS         &kp EQUAL  &kp SQT            &kp BSPC
&kp LSHFT  &kp X   &kp ESC        &kp DEL    &kp TAB    &kp BACKSLASH  &kp LEFT_BRACKET  &kp DOT    &kp RIGHT_BRACKET  &kp ENTER
                   &trans         &kp SPACE  &trans     &trans         &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        symbol {
            label = "SYMBOL";
            bindings = <
&kp F1        &kp F2        &kp F3             &kp F4      &kp F5     &kp F6             &kp F7            &kp F8           &kp F9        &kp F10
&kp CAPS      &trans        &kp HOME           &kp END     &kp F11    &kp GRAVE          &kp C_PREVIOUS    &kp C_NEXT       &kp UP_ARROW  &kp RIGHT
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_CLR  &kp F12    &kp C_MUTE         &kp C_PLAY_PAUSE  &kp LEFT         &kp DOWN      &trans
                            &kp RIGHT_CONTROL  &trans      &trans     &kp C_VOLUME_DOWN  &trans            &kp C_VOLUME_UP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        ble {
            label = "BLE";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp KP_N7  &kp KP_N8  &kp KP_N9  &none  &kp BSPC
&bootloader   &none         &none         &bt BT_CLR    &out OUT_TOG    &kp KP_N4  &kp KP_N5  &kp KP_N6  &none  &none
&none         &none         &none         &out OUT_USB  &out OUT_BLE    &kp KP_N1  &kp KP_N2  &kp KP_N3  &none  &none
                            &trans        &none         &none           &kp KP_N0  &kp KP_N0  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };
    };
};
